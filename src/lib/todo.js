/* TODO hugsanlega importa el, empty √∫r ./elements.js */

// Leyfilegt a√∞ breyta skilgreiningum √° f√∂llum og b√¶ta vi√∞ fleiri f√∂llum.

/* TODO merkja vi√∞eigandi f√∂ll me√∞ `export` */

/**
 * Breytir st√∂√∞u atri√∞is √≠ lista. Ef kl√°ru√∞ atri√∞i eru s√Ωnd er √æa√∞ s√Ωnt, annars er √æa√∞ fali√∞ um lei√∞ og √æa√∞ er kl√°ra√∞.
 * @param {HTMLElement} item
 * @param {boolean} isShown `true` ef kl√°ru√∞ atri√∞i eru s√Ωnileg, annars `false`.
 * @returns {void}
 */
function toggleTodoItemStatus(item, isShown = true) {
  /* TODO √∫tf√¶ra */
}

/**
 * Fjarl√¶gja atri√∞i (sem DOM element) √∫r lista.
 * @param {HTMLElement} item
 * @returns {void}
 */
function removeTodoItem(item) {
  console.log("EY√êA", item);
  const spanEl = item.querySelector("span.item");

  let text = "<unknown item>";
  if (!spanEl) {
    console.warn("cannot find spanEl");
  } else {
    text = spanEl.textContent;
  }

  if (confirm(`Viltu ey√∞a ‚Äû${text}‚Äú?`)) {
    item.remove();
  }
}

/**
 * Breytir s√Ωnileika kl√°ra√∞ra atri√∞a √≠ lista.
 * @param {HTMLElement} todolist
 * @return {boolean} `true` if finished items are shown, `false` if hidden
 */
function toggleFinished(todolist) {
  /* TODO √∫tf√¶ra */
}

/**
 * Hreinsar allan lista.
 * @param {HTMLElement} todolist
 * @return {void}
 */
function clearList(todolist) {
  /* TODO √∫tf√¶ra */
}

/**
 * Uppf√¶rir uppl√Ωsingar um fj√∂lda kl√°ra√∞ra og √≥kl√°ra√∞ra atri√∞a √≠ lista.
 * @param {HTMLElement} todolist
 * @return {void}
 */
export function updateStats(todolist) {
  const finishedEl = todolist.querySelector(".stats .finished");
  const unfinishedEl = todolist.querySelector(".stats .unfinished");

  if (!finishedEl || !unfinishedEl) {
    console.warn("could not find finished/unfinished nodes");
    return;
  }

  const allItems = todolist.querySelectorAll(".list li");
  const allFinishedItems = todolist.querySelectorAll(".list li.finished");

  if (!allItems || !allFinishedItems) {
    return;
  }

  const finishedCount = allFinishedItems.length;
  const unfinishedCount = allItems.length - finishedCount;

  finishedEl.textContent = finishedCount.toString();
  unfinishedEl.textContent = unfinishedCount.toString();
}

/**
 * B√Ωr til n√Ωtt atri√∞i √≠ lista me√∞ texta `text`.
 * @param {HTMLElement} todolist
 * @param {string} text
 * @return {void}
 */
export function createTodoItem(todolist, text) {
  // console.log('hi fr√° createTodoItem', todolist, text)

  /*
<li>
  <label>
    <input type="checkbox" name="finished"  />
    <span class="item"
      >D√¶mi um atri√∞i me√∞ l√∂ngum texta og or√∞i sem er mj√∂g langt
      Va√∞lahei√∞arvegavinnuverkf√¶rageymslusk√∫rslyklakippuhringurinn</span
    >
  </label>
  <button title="Fjarl√¶gja atri√∞i">üóëÔ∏è</button>
</li>
  */
  const li = document.createElement("li");

  const button = document.createElement("button");
  button.textContent = "üóëÔ∏è";
  button.addEventListener("click", () => {
    removeTodoItem(li);
    updateStats(todolist);
  });

  const input = document.createElement("input");
  input.setAttribute("type", "checkbox");
  input.setAttribute("name", "finished");
  input.addEventListener("change", () => {
    console.log("input", input.checked);
  });

  const span = document.createElement("span");
  span.classList.add("item");
  span.textContent = text;

  const label = document.createElement("label");

  label.appendChild(input);
  label.appendChild(span);
  li.appendChild(label);
  li.appendChild(button);

  const list = todolist.querySelector("ul.list");
  list?.appendChild(li);
}

/**
 * Athugar hvort listinn s√© t√≥mur og s√Ωnir e√∞a felur skilabo√∞ um t√≥man lista.
 * @param {HTMLElement} todolist
 * @return {void}
 */
function checkListState(todolist) {
  /* TODO √∫tf√¶ra */
}
